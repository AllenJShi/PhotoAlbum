AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Lambda template 
Resources:
  S3Photos:
    Type: "AWS::S3::Bucket"
    Properties: 
      AccessControl: PublicRead
      CorsConfiguration:
        CorsRules:
          -
            AllowedOrigins: 
              - "*"
            AllowedMethods: 
              - POST
              - GET
              - PUT
              - DELETE
              - HEAD
            AllowedHeaders: 
              - "*"

  S3PhotosBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Photos
      PolicyDocument:
        Id: PublicWebsitePolicy
        Version: 2012-10-17
        Statement:
          - Sid: S3PhotosBucketPolicy
            Action: 's3:*'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3Photos
                - /*
            Principal: '*'

  indexphotos:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: index-photos-cf
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      CodeUri: ./assets/lf1
      Description: >-
        An Amazon S3 trigger that retrieves metadata for the object that has
        been updated.
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::240279741812:role/service-role/LF1-index-photos'
      Events:
        S3Trigger:
          Type: S3
          Properties:
            Bucket: !Ref S3Photos
            Events:
              - 's3:ObjectCreated:Put'


  indexphotosPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt indexphotos.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !GetAtt S3Photos.Arn
  

  searchphotos:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: search-photos-cf
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      CodeUri: ./assets/lf2
      Description: 'search photos'
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::240279741812:role/service-role/search-photos-role-fu63i46x'
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /search
            Method: GET

  searchphotosPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt searchphotos.Arn
      Action: lambda:InvokeFunction
      Principal: 
        - apigateway.amazonaws.com
        - lex.amazonaws.com



#   searchphotosRole:
#     Type: AWS::IAM::Role
#     Properties:
#       RoleName: search-photo-role-cf
#       AssumeRolePolicyDocument: |
#         {
#             "Statement": [{
#                 "Effect": "Allow",
#                 "Principal": { "Service": [ "codebuild.amazonaws.com" ]},
#                 "Action": [ "sts:AssumeRole" ]
#             }]
#         }
#       Policies:
#         - PolicyName: search-photos-role-policies
#           PolicyDocument: |
#             {
#                 "Version": "2012-10-17",
#                 "Statement": [
#                     {
#                         "Effect": "Allow",
#                         "Action": "logs:CreateLogGroup",
#                         "Resource": "arn:aws:logs:us-east-1:240279741812:*"
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "logs:CreateLogStream",
#                             "logs:PutLogEvents"
#                         ],
#                         "Resource": [
#                             "arn:aws:logs:us-east-1:240279741812:log-group:/aws/lambda/search-photos-cf:*"
#                         ]
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "s3:*",
#                             "s3-object-lambda:*"
#                         ],
#                         "Resource": "*"
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "cloudwatch:GetMetricStatistics",
#                             "cloudwatch:DescribeAlarms",
#                             "cloudwatch:DescribeAlarmsForMetric",
#                             "kms:DescribeKey",
#                             "kms:ListAliases",
#                             "lambda:GetPolicy",
#                             "lambda:ListFunctions",
#                             "lex:*",
#                             "polly:DescribeVoices",
#                             "polly:SynthesizeSpeech",
#                             "kendra:ListIndices",
#                             "iam:ListRoles",
#                             "s3:ListAllMyBuckets",
#                             "logs:DescribeLogGroups",
#                             "s3:GetBucketLocation"
#                         ],
#                         "Resource": [
#                             "*"
#                         ]
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "lambda:AddPermission",
#                             "lambda:RemovePermission"
#                         ],
#                         "Resource": "arn:aws:lambda:*:*:function:AmazonLex*",
#                         "Condition": {
#                             "StringEquals": {
#                                 "lambda:Principal": "lex.amazonaws.com"
#                             }
#                         }
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "iam:GetRole"
#                         ],
#                         "Resource": [
#                             "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots",
#                             "arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels",
#                             "arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*",
#                             "arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*"
#                         ]
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "iam:CreateServiceLinkedRole"
#                         ],
#                         "Resource": [
#                             "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"
#                         ],
#                         "Condition": {
#                             "StringEquals": {
#                                 "iam:AWSServiceName": "lex.amazonaws.com"
#                             }
#                         }
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "iam:CreateServiceLinkedRole"
#                         ],
#                         "Resource": [
#                             "arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"
#                         ],
#                         "Condition": {
#                             "StringEquals": {
#                                 "iam:AWSServiceName": "channels.lex.amazonaws.com"
#                             }
#                         }
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "iam:CreateServiceLinkedRole"
#                         ],
#                         "Resource": [
#                             "arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*"
#                         ],
#                         "Condition": {
#                             "StringEquals": {
#                                 "iam:AWSServiceName": "lexv2.amazonaws.com"
#                             }
#                         }
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "iam:CreateServiceLinkedRole"
#                         ],
#                         "Resource": [
#                             "arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*"
#                         ],
#                         "Condition": {
#                             "StringEquals": {
#                                 "iam:AWSServiceName": "channels.lexv2.amazonaws.com"
#                             }
#                         }
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "iam:DeleteServiceLinkedRole",
#                             "iam:GetServiceLinkedRoleDeletionStatus"
#                         ],
#                         "Resource": [
#                             "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots",
#                             "arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels",
#                             "arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*",
#                             "arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*"
#                         ]
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "iam:PassRole"
#                         ],
#                         "Resource": [
#                             "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"
#                         ],
#                         "Condition": {
#                             "StringEquals": {
#                                 "iam:PassedToService": [
#                                     "lex.amazonaws.com"
#                                 ]
#                             }
#                         }
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "iam:PassRole"
#                         ],
#                         "Resource": [
#                             "arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*"
#                         ],
#                         "Condition": {
#                             "StringEquals": {
#                                 "iam:PassedToService": [
#                                     "lexv2.amazonaws.com"
#                                 ]
#                             }
#                         }
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "iam:PassRole"
#                         ],
#                         "Resource": [
#                             "arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*"
#                         ],
#                         "Condition": {
#                             "StringEquals": {
#                                 "iam:PassedToService": [
#                                     "channels.lexv2.amazonaws.com"
#                                 ]
#                             }
#                         }
#                     },
#                     {
#                         "Effect": "Allow",
#                         "Action": [
#                             "es:*"
#                         ],
#                         "Resource": "*"
#                     }
#                 ]
#             }
